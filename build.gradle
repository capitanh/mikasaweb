plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'eclipse'
	id "org.sonarqube" version "3.0"
}

sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

////////////////////////////////////////////////////////////
// Unit Tests
test {
	useJUnitPlatform()
	afterTest {
		desc, result -> println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
	}
}

////////////////////////////////////////////////////////////
// Integration Tests
sourceSets {
  intTest {
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}
configurations {
  intTestImplementation.extendsFrom implementation
  intTestRuntimeOnly.extendsFrom runtimeOnly
}
task integrationTest(type: Test) {
  description = 'Runs integration tests'
  group = 'verification'

  testClassesDirs = sourceSets.intTest.output.classesDirs
  classpath = sourceSets.intTest.runtimeClasspath
  outputs.upToDateWhen {false}
}
integrationTest {
  useJUnitPlatform()
	afterTest {
		desc, result -> println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
	}
}
check.dependsOn integrationTest

////////////////////////////////////////////////////////////
// Functional Tests
sourceSets {
  funcTest {
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}
configurations {
  funcTestImplementation.extendsFrom implementation
  funcTestRuntimeOnly.extendsFrom runtimeOnly
}
task functionalTest(type: Test) {
  description = 'Runs Functional tests'
  group = 'verification'

  testClassesDirs = sourceSets.funcTest.output.classesDirs
  classpath = sourceSets.funcTest.runtimeClasspath
  outputs.upToDateWhen {false}
}
functionalTest {
  useJUnitPlatform()
	afterTest {
		desc, result -> println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
	}
}
check.dependsOn functionalTest


dependencies {
	//Unit tests
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	//Integration Tests
  intTestImplementation 'org.springframework.boot:spring-boot-starter-test'
  intTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

  //Functional Tests
  funcTestImplementation 'org.springframework.boot:spring-boot-starter-test'
  funcTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
  funcTestImplementation 'org.seleniumhq.selenium:selenium-server:3.7.1'
  funcTestImplementation 'com.unboundid:unboundid-ldapsdk'

	//Runtime
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-ldap'
  implementation 'org.springframework.ldap:spring-ldap-core'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.webjars:bootstrap:3.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.apache.commons:commons-io:1.3.2'
	//implementation 'org.seleniumhq.selenium:selenium-server:3.7.1'

}


