buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.akhikhl.gretty:gretty:1.1.4'
  }
}

repositories {
  //mavenLocal()
  //mavenCentral()
  jcenter()
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'maven-publish'

sourceSets{
	integration
}

task integrationTest(type: Test){
	testClassesDir = sourceSets.integration.output.classesDir
	classpath = sourceSets.integration.runtimeClasspath
}

task testReport(type: TestReport){
	destinationDir = new File("build/reports/tests")
	reportOn(test,integrationTest)
}

war {
  manifest{
    attributes(
      "Implementation-Title": project.description,
      "Implementation-Version": version,
      "Build-date": new Date().format('dd-MM-yyyy HH:mm:ss'),
      "Build-by": System.properties.'user.name',
      "git-revision": "git rev-parse --short HEAD".execute().text.trim(),
      "git-branch": "git status -bs -u no".execute().text.trim()
    )
  }
}

gretty {
  contextPath = '/mikasaweb'
  servletContainer = 'jetty9'
  serverConfigFile = 'src/integration/resources/jetty.xml'
  springBoot = true
}

dependencies {
	gretty 'mysql:mysql-connector-java:5.0.5'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.dbunit:dbunit:2.5.0'
  testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.1.0'
  testCompile 'com.h2database:h2:1.4.182'
  //Needed to avoid compile errors in eclipse
  testCompile 'org.seleniumhq.selenium:selenium-java:2.44.0'
  
	integrationCompile 'junit:junit:4.11'
	integrationCompile 'org.seleniumhq.selenium:selenium-java:2.44.0'
  
  compile 'com.jcabi:jcabi-manifests:1.1'
  compile 'org.webjars:bootstrap:3.3.0'
	compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

publishing {
  repositories {
    maven {
      name 'NexusSnapshots'
      url 'http://localhost:8082/nexus/content/repositories/snapshots/'
      credentials {
        username System.getenv('nexusUser')
        password System.getenv('nexusPassword')
      }
    }
    maven {
      name 'NexusReleases'
      url 'http://localhost:8082/nexus/content/repositories/releases/'
      credentials {
        username System.getenv('nexusUser')
        password System.getenv('nexusPassword')
      }
    }
  }
  publications {
    snapshot(MavenPublication) {
      from components.web
      ext.repo = 'NexusSnapshots'
    }
    release(MavenPublication) {
      from components.web
      ext.repo = 'NexusReleases'
    }    
  }
}
